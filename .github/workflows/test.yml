name: test
on: [push]

env:
  golang-version: '1.16.5'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-latest
          platform: win64
        - os: ubuntu-latest
          platform: linux

    name: TestMsspiClient
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.golang-version }}

    - name: Setup CryptoPro/go
      shell: bash
      run: |
        cd $RUNNER_TEMP
        git clone --depth 1 --branch go.1.16-msspi https://github.com/CryptoPro/go.git
        cd go
        git submodule update --init --recursive --depth 1
        cd src/go-msspi/msspi/build_linux
        make -B static
        if [ "$RUNNER_OS" != "Windows" ]; then
          make -B static-capix
        fi
        cp -rf $RUNNER_TEMP/go/src $GOROOT

    - name: Install CryptoPro CSP (Linux)
      if: matrix.os == 'ubuntu-latest'
      env:
        CPRO_CREDENTIALS: ${{ secrets.CPRO_CREDENTIALS }}
      shell: bash
      run: |
        curl https://${CPRO_CREDENTIALS}@update.cryptopro.ru/support/stunnel/dist/csp50r2/linux-amd64_deb.tgz --output linux-amd64_deb.tgz
        tar -xvf linux-amd64_deb.tgz
        cd linux-amd64_deb
        sudo ./install.sh kc1

    - name: Install CryptoPro CSP (Windows)
      if: matrix.os == 'windows-latest'
      env:
        CPRO_CREDENTIALS: ${{ secrets.CPRO_CREDENTIALS }}
      run: |
        curl https://${CPRO_CREDENTIALS}@update.cryptopro.ru/support/stunnel/dist/csp50r2/csp-x64-eng.msi --output csp-x64-eng.msi
        msiexec /qn /i "csp-x64-eng.msi" REBOOT=R INSTALLCPCERT=1 REGREGISTRY=1 INTERACTIVESERVICES=1 REGBIO=1 FOREIGN=1 KCLEVEL=1 REPROV=1 CERTSTOREPARAMSSUPPORTED=1 REGALL=1 FULLCNGREGISTER=1 DRIVER=1

    - name: TestMsspiClient
      run: |
        go test -run MsspiClient
